{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "142bb629",
   "metadata": {},
   "source": [
    "# Data access\n",
    "\n",
    "IceCube has a bunch of public datasets available at [https://icecube.wisc.edu/science/data-releases/](https://icecube.wisc.edu/science/data-releases/). `icecube_tools` provides an easy interface to this repository so that you can download and organise your data through python."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0c85b41e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-25T16:43:31.428977Z",
     "iopub.status.busy": "2023-09-25T16:43:31.428368Z",
     "iopub.status.idle": "2023-09-25T16:43:33.149046Z",
     "shell.execute_reply": "2023-09-25T16:43:33.147950Z"
    }
   },
   "outputs": [],
   "source": [
    "from icecube_tools.utils.data import IceCubeData"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ca0d7f6",
   "metadata": {},
   "source": [
    "The `IceCubeData` class provides this functionality. Upon initialisation, `IceCubeData` queries the website using HTTP requests to check what datasets are currently available. By default, this request is cached to avoid spamming the IceCube website. However, you can use the keyword argument `update` to override this."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "87677fab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-25T16:43:33.154265Z",
     "iopub.status.busy": "2023-09-25T16:43:33.153351Z",
     "iopub.status.idle": "2023-09-25T16:43:34.410036Z",
     "shell.execute_reply": "2023-09-25T16:43:34.408689Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['2021_03-all_data_releases.zip',\n",
       " '20080911_AMANDA_7_Year_Data.zip',\n",
       " '20090521_IceCube-22_Solar_WIMP_Data.zip',\n",
       " '20110905_IceCube-40_String_Data.zip',\n",
       " '20131121_Search_for_contained_neutrino_events_at_energies_above_30_TeV_in_2_years_of_data.zip',\n",
       " '20150127_IceCube_Oscillations%20_3_years_muon_neutrino_disappearance_data.zip',\n",
       " '20150219_Search_for_contained_neutrino_events_at_energies_greater_than_1_TeV_in_2_years_of_data.zip',\n",
       " '20150619_IceCube-59%20_Search_for_point_sources_using_muon_events.zip',\n",
       " '20150820_Astrophysical_muon_neutrino_flux_in_the_northern_sky_with_2_years_of_IceCube_data.zip',\n",
       " '20151021_Observation_of_Astrophysical_Neutrinos_in_Four_Years_of_IceCube_Data.zip',\n",
       " '20160105_The_79-string_IceCube_search_for_dark_matter.zip',\n",
       " '20160624_Search_for_sterile_neutrinos_with_one_year_of_IceCube_data.zip',\n",
       " '20161101_Search_for_point_sources_with_first_year_of_IC86_data.zip',\n",
       " '20161115_A_combined_maximum-likelihood_analysis_of_the_astrophysical_neutrino_flux.zip',\n",
       " '20180213_Measurement_of_atmospheric_neutrino_oscillations_with_three_years_of_data_from_the_full_sky.zip',\n",
       " '20180712_IceCube_catalog_of_alert_events_up_through_IceCube-170922A.zip',\n",
       " '20180712_IceCube_data_from_2008_to_2017_related_to_analysis_of_TXS_0506+056.zip',\n",
       " '20181018_All-sky_point-source_IceCube_data%20_years_2010-2012.zip',\n",
       " '20190515_Three-year_high-statistics_neutrino_oscillation_samples.zip',\n",
       " '20190904_Bayesian_posterior_for_IceCube_7-year_point-source_search_with_neutrino-count_statistics.zip',\n",
       " '20200227_All-sky_point-source_IceCube_data%20_years_2012-2015.zip',\n",
       " '20200421_IceCube_Upgrade_Neutrino_Monte_Carlo_Simulation.zip',\n",
       " '20200514_South_Pole_ice_temperature.zip',\n",
       " '20210126_PS-IC40-IC86_VII.zip',\n",
       " '20210310_IceCube_data_for_the_first_Glashow_resonance_candidate.zip',\n",
       " '20211217_HESE-7-5-year-data.zip',\n",
       " '20220201_Density_of_GeV_muons_in_air_showers_measured_with_IceTop.zip',\n",
       " '20220902_Evidence_for_neutrino_emission_from_the_nearby_active_galaxy_NGC_1068_data.zip',\n",
       " '20220913_Evidence_for_neutrino_emission_from_the_nearby_active_galaxy_NGC_1068_data.zip',\n",
       " '20221028_Observation_of_High-Energy_Neutrinos_from_the_Galactic_Plane.zip',\n",
       " '20221208_Observation_of_High-Energy_Neutrinos_from_the_Galactic_Plane.zip',\n",
       " '20230424_Observation_of_High-Energy_Neutrinos_from_the_Galactic_Plane.zip',\n",
       " 'ic22-solar-wimp-histograms.zip']"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_data = IceCubeData(update=True)\n",
    "\n",
    "# The available datasets\n",
    "my_data.datasets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "409e54b7",
   "metadata": {},
   "source": [
    "You can use the `find` method to pick out datasets you are interested in."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1c1304a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-25T16:43:34.413820Z",
     "iopub.status.busy": "2023-09-25T16:43:34.413315Z",
     "iopub.status.idle": "2023-09-25T16:43:34.419520Z",
     "shell.execute_reply": "2023-09-25T16:43:34.418589Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['20181018_All-sky_point-source_IceCube_data%20_years_2010-2012.zip']"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "found_dataset = my_data.find(\"20181018\")\n",
    "found_dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8fce577",
   "metadata": {},
   "source": [
    "The `my_data` object has been inititalised to store data in the package's default location (\"~/.icecube_data\"). This is where other `icecube_tools` modules will look for stored data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "891d7e7e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-25T16:43:34.423453Z",
     "iopub.status.busy": "2023-09-25T16:43:34.422981Z",
     "iopub.status.idle": "2023-09-25T16:43:34.428660Z",
     "shell.execute_reply": "2023-09-25T16:43:34.427809Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/home/runner/.icecube_data'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_data.data_directory"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c890bcc",
   "metadata": {},
   "source": [
    "The `fetch` method will download this dataset to this default location for later use by `icecube_tools`. This method takes a list of names, so can also be used to download multiple datasets. `fetch` has a built in delay of a few seconds between HTTP requests to avoid spamming the website. `fetch` will not overwrite files by default, but this can be forced with `overwrite=True`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9944b956",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-25T16:43:34.435445Z",
     "iopub.status.busy": "2023-09-25T16:43:34.435127Z",
     "iopub.status.idle": "2023-09-25T16:43:45.478465Z",
     "shell.execute_reply": "2023-09-25T16:43:45.477297Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:   0%|          | 0/11730609 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:   9%|▉         | 1048576/11730609 [00:00<00:02, 4383939.00it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:  27%|██▋       | 3145728/11730609 [00:00<00:00, 9384741.55it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:  63%|██████▎   | 7340032/11730609 [00:00<00:00, 19216772.37it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...: 100%|██████████| 11730609/11730609 [00:00<00:00, 20992948.52it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "my_data.fetch(found_dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7c1c12b",
   "metadata": {},
   "source": [
    "You may not want to use `icecube_tools` for other stuff, so you can also fetch to a specificed location with the keyword `write_to`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4fc7adb9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-25T16:43:45.482983Z",
     "iopub.status.busy": "2023-09-25T16:43:45.482658Z",
     "iopub.status.idle": "2023-09-25T16:43:56.199854Z",
     "shell.execute_reply": "2023-09-25T16:43:56.198737Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:   0%|          | 0/11730609 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:   9%|▉         | 1048576/11730609 [00:00<00:03, 2797045.59it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:  18%|█▊        | 2097152/11730609 [00:00<00:02, 4706259.44it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:  36%|███▌      | 4194304/11730609 [00:00<00:00, 8899455.60it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...:  63%|██████▎   | 7340032/11730609 [00:00<00:00, 14791930.04it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "20181018_All-sky_point-source_IceCube_da...: 100%|██████████| 11730609/11730609 [00:00<00:00, 14497135.22it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "my_data.fetch(found_dataset, write_to=\"data\", overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d978e541",
   "metadata": {},
   "source": [
    "For convenience, there is also the `fetch_all_to` method to download all the available data to a specified location. We comment this here as it can take a while to execute."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bc5b23c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-25T16:43:56.204522Z",
     "iopub.status.busy": "2023-09-25T16:43:56.203578Z",
     "iopub.status.idle": "2023-09-25T16:43:56.208831Z",
     "shell.execute_reply": "2023-09-25T16:43:56.207762Z"
    }
   },
   "outputs": [],
   "source": [
    "# my_data.fetch_all_to(\"data\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "icecube_dev",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
