{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5b34ec2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-22T09:37:19.938579Z",
     "iopub.status.busy": "2023-02-22T09:37:19.938368Z",
     "iopub.status.idle": "2023-02-22T09:37:21.239306Z",
     "shell.execute_reply": "2023-02-22T09:37:21.238641Z"
    }
   },
   "outputs": [],
   "source": [
    "from icecube_tools.utils.data import RealEvents, SimEvents\n",
    "from icecube_tools.point_source_analysis.point_source_analysis import MapScan\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a438a37c",
   "metadata": {},
   "source": [
    "## MapScan\n",
    "\n",
    "We can perform a scan over the sky for point sources. At each proposed source location a likelihood fit is performed. First we have to provide some events, here we use the simulated ones from the example notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dff37bf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-22T09:37:21.242394Z",
     "iopub.status.busy": "2023-02-22T09:37:21.241832Z",
     "iopub.status.idle": "2023-02-22T09:37:21.249217Z",
     "shell.execute_reply": "2023-02-22T09:37:21.248640Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Resetting rng\n"
     ]
    }
   ],
   "source": [
    "events = SimEvents.load_from_h5(\"h5_test.hdf5\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2eddbce3",
   "metadata": {},
   "source": [
    "Then we create a MapScan() object with some configuration `config.yaml` in which source lists, data cuts, etc. can be stored, the events, and a path for the output of the scan `test_output.hdf5`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "29f33bcf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-22T09:37:21.251748Z",
     "iopub.status.busy": "2023-02-22T09:37:21.251423Z",
     "iopub.status.idle": "2023-02-22T09:37:21.260094Z",
     "shell.execute_reply": "2023-02-22T09:37:21.259522Z"
    }
   },
   "outputs": [],
   "source": [
    "scan = MapScan(\"config.yaml\", events, \"test_output.hdf5\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b6fabbe",
   "metadata": {},
   "source": [
    "Let's create a small grid around the source location of the simulation: (ra, dec) = (180°, 30°)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "43698937",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-22T09:37:21.262599Z",
     "iopub.status.busy": "2023-02-22T09:37:21.262060Z",
     "iopub.status.idle": "2023-02-22T09:37:21.266487Z",
     "shell.execute_reply": "2023-02-22T09:37:21.265920Z"
    }
   },
   "outputs": [],
   "source": [
    "dec = np.linspace(np.deg2rad(25), np.deg2rad(35), 11)\n",
    "ra = np.linspace(np.pi - np.deg2rad(5), np.pi + np.deg2rad(5), 11)\n",
    "rr, dd = np.meshgrid(ra, dec)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07d420e1",
   "metadata": {},
   "source": [
    "The source coordinates need to be handed over the the MapScan, then `generate_sources()` is called. Although the sources are already generated, it is able to create source lists from healpy keywords npix and nside for entire sky searches. Furthermore, output arrays of appropriate sizes are created. Afterwards the fits are started."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "aea8eea4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-22T09:37:21.269013Z",
     "iopub.status.busy": "2023-02-22T09:37:21.268683Z",
     "iopub.status.idle": "2023-02-22T09:37:29.770770Z",
     "shell.execute_reply": "2023-02-22T09:37:29.770077Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  0%|          | 0/121 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  1%|          | 1/121 [00:01<03:46,  1.89s/it]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  3%|▎         | 4/121 [00:02<00:46,  2.54it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  6%|▌         | 7/121 [00:02<00:23,  4.84it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  8%|▊         | 10/121 [00:02<00:15,  7.37it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 11%|█         | 13/121 [00:02<00:10, 10.00it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 13%|█▎        | 16/121 [00:02<00:08, 11.69it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 15%|█▍        | 18/121 [00:02<00:07, 13.00it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 17%|█▋        | 21/121 [00:02<00:06, 14.95it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 20%|█▉        | 24/121 [00:02<00:05, 17.05it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 22%|██▏       | 27/121 [00:03<00:05, 17.18it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 24%|██▍       | 29/121 [00:03<00:05, 16.93it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 26%|██▋       | 32/121 [00:03<00:04, 18.34it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 29%|██▉       | 35/121 [00:03<00:04, 19.59it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 31%|███▏      | 38/121 [00:03<00:04, 18.87it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 33%|███▎      | 40/121 [00:03<00:04, 17.53it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 35%|███▍      | 42/121 [00:03<00:04, 17.77it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 37%|███▋      | 45/121 [00:04<00:03, 19.29it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 39%|███▉      | 47/121 [00:04<00:03, 19.09it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 40%|████      | 49/121 [00:04<00:04, 17.91it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 42%|████▏     | 51/121 [00:04<00:04, 15.97it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 44%|████▍     | 53/121 [00:04<00:04, 16.52it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 46%|████▋     | 56/121 [00:04<00:03, 18.53it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 48%|████▊     | 58/121 [00:04<00:03, 18.69it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 50%|████▉     | 60/121 [00:04<00:03, 16.29it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 51%|█████     | 62/121 [00:05<00:04, 14.04it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 53%|█████▎    | 64/121 [00:05<00:03, 14.76it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 55%|█████▍    | 66/121 [00:05<00:03, 15.09it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 57%|█████▋    | 69/121 [00:05<00:03, 17.30it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 59%|█████▊    | 71/121 [00:05<00:03, 16.58it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 60%|██████    | 73/121 [00:05<00:03, 15.44it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 62%|██████▏   | 75/121 [00:05<00:02, 16.33it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 64%|██████▎   | 77/121 [00:06<00:02, 15.78it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 66%|██████▌   | 80/121 [00:06<00:02, 17.51it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 68%|██████▊   | 82/121 [00:06<00:02, 18.09it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 69%|██████▉   | 84/121 [00:06<00:02, 18.05it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 72%|███████▏  | 87/121 [00:06<00:01, 17.71it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 74%|███████▎  | 89/121 [00:06<00:01, 17.96it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 76%|███████▌  | 92/121 [00:06<00:01, 18.85it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 78%|███████▊  | 94/121 [00:06<00:01, 18.75it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 80%|████████  | 97/121 [00:07<00:01, 19.38it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 82%|████████▏ | 99/121 [00:07<00:01, 17.98it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 84%|████████▍ | 102/121 [00:07<00:00, 19.41it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 86%|████████▌ | 104/121 [00:07<00:00, 19.37it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 88%|████████▊ | 107/121 [00:07<00:00, 20.22it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 91%|█████████ | 110/121 [00:07<00:00, 18.74it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 93%|█████████▎| 112/121 [00:07<00:00, 18.57it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 94%|█████████▍| 114/121 [00:08<00:00, 17.34it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 96%|█████████▌| 116/121 [00:08<00:00, 16.51it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 98%|█████████▊| 118/121 [00:08<00:00, 16.38it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 99%|█████████▉| 120/121 [00:08<00:00, 16.79it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "100%|██████████| 121/121 [00:08<00:00, 14.27it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "scan.ra_test = rr.flatten()\n",
    "scan.dec_test = dd.flatten()\n",
    "scan.generate_sources()\n",
    "scan.perform_scan(show_progress=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2ef937f",
   "metadata": {},
   "source": [
    "We can have a look at the results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "37c79bce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-02-22T09:37:29.773470Z",
     "iopub.status.busy": "2023-02-22T09:37:29.773115Z",
     "iopub.status.idle": "2023-02-22T09:37:30.584960Z",
     "shell.execute_reply": "2023-02-22T09:37:30.583784Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x400 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3, figsize=(15, 4))\n",
    "\n",
    "pcol = ax[0].pcolormesh(ra, dec, scan.ts.reshape((11, 11)), shading=\"nearest\")\n",
    "fig.colorbar(pcol, ax=ax[0], label=\"TS\")\n",
    "\n",
    "pcol = ax[1].pcolormesh(ra, dec, scan.index.reshape((11, 11)), shading=\"nearest\")\n",
    "fig.colorbar(pcol, ax=ax[1], label=\"index\")\n",
    "\n",
    "pcol = ax[2].pcolormesh(ra, dec, scan.ns.reshape((11, 11)), shading=\"nearest\")\n",
    "fig.colorbar(pcol, ax=ax[2], label=\"ns\")\n",
    "fig.savefig(\"example_sky_skan.png\", dpi=150)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2151a29f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
