{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e73d3977",
   "metadata": {},
   "source": [
    "# Point source likelihood\n",
    "\n",
    "`icecube_tools` also provides an interface to the likelihoods often used in point source searches of the neutrino data (see [this paper](https://arxiv.org/abs/0801.1604) by Braun et al.).\n",
    "\n",
    "$$\n",
    "\\mathcal{L} = \\prod_{i=1}^N \\Bigg[ \\frac{n_s}{N} \\mathcal{S}(\\theta_i, E_i, \\gamma) + (1-\\frac{n_s}{N}) \\mathcal{B}(\\theta_i, E_i) \\Bigg],\n",
    "$$\n",
    "where $N$ is the total number of detected neutrino events, $n_s$ is the expected number of source events, $\\theta$ is the neutrino direction, $E$ is the reconstructed neutrino energy and $\\gamma$ is the source spectral index.\n",
    "\n",
    "The point source likelihood is a mixture model with two components: one representing possible astrophysical neutrino sources, $\\mathcal{S}(\\theta, E)$, and the other known background, $\\mathcal{B}(\\theta, E)$. Each component has terms depending on the directional or spatial source--neutrino relationship and also the energy of the neutrinos, as higher energy neutrinos are more likely to come from astrophysical sources. Depending on the search, the energy dependence may be omitted. Also, there may be a temporal dependence added, but this is not yet implemented in `icecube_tools`.\n",
    "\n",
    "Here we implement a simple likelihood and apply it to some simulated data. There are several likelihoods available, and more information can be found in the API documentation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9d079454",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:32.189992Z",
     "iopub.status.busy": "2022-01-18T23:11:32.189252Z",
     "iopub.status.idle": "2022-01-18T23:11:33.260513Z",
     "shell.execute_reply": "2022-01-18T23:11:33.259648Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "import h5py\n",
    "\n",
    "from icecube_tools.point_source_likelihood.spatial_likelihood import (\n",
    "    SpatialGaussianLikelihood,\n",
    ")\n",
    "from icecube_tools.point_source_likelihood.energy_likelihood import (\n",
    "    MarginalisedEnergyLikelihoodBraun2008,\n",
    "    read_input_from_file,\n",
    ")\n",
    "from icecube_tools.point_source_likelihood.point_source_likelihood import (\n",
    "    PointSourceLikelihood,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59c60f58",
   "metadata": {},
   "source": [
    "## Spatial likelihood"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "867ff7ba",
   "metadata": {},
   "source": [
    "We can start with the spatial/directional term. Let's approximate our detector as having a fixed angular resolution of 1 degree. We can then define the source spatial term as a 2D Gaussian with a fixed width. The background case will simply be an isotropic distribution on the sphere."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c4d4c15e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:33.264968Z",
     "iopub.status.busy": "2022-01-18T23:11:33.264339Z",
     "iopub.status.idle": "2022-01-18T23:11:33.268577Z",
     "shell.execute_reply": "2022-01-18T23:11:33.268090Z"
    }
   },
   "outputs": [],
   "source": [
    "angular_resolution = 1  # deg\n",
    "spatial_likelihood = SpatialGaussianLikelihood(angular_resolution)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8bb96af4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:33.310802Z",
     "iopub.status.busy": "2022-01-18T23:11:33.280836Z",
     "iopub.status.idle": "2022-01-18T23:11:33.482263Z",
     "shell.execute_reply": "2022-01-18T23:11:33.477824Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f4ba5281700>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "source_coord = (np.pi, np.pi / 4)\n",
    "test_coords = [(np.pi + _, source_coord[1]) for _ in np.linspace(-0.1, 0.1, 100)]\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(\n",
    "    np.rad2deg([tc[0] for tc in test_coords]),\n",
    "    [spatial_likelihood(tc, source_coord) for tc in test_coords],\n",
    ")\n",
    "ax.axvline(\n",
    "    np.rad2deg(source_coord[0]), color=\"k\", linestyle=\":\", label=\"Source location\"\n",
    ")\n",
    "ax.set_xlabel(\"RA [deg]\")\n",
    "ax.set_ylabel(\"Spatial likelihood\")\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de539e4a",
   "metadata": {},
   "source": [
    "## Energy likelihood"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71ee8efe",
   "metadata": {},
   "source": [
    "Now let's think about the energy-dependent term. The way this is handled is to marginalise over the true neutrino energies, to directly connect the reconstructed neutrino energies to the spectral index of a simple power-law source model.\n",
    "\n",
    "Doing this properly requires a knowledge of the relationship between the true and reconstructed energies as well as the details of the power law model. The most straightforward way to implement this is to simulate the a large number of events using the `Simulator` and build a likelihood using the output of this simulation and `MarginalisedEnergyLikelihoodFromSim`. However, this can take a while to run, so here let's just use an implementation based on a plot from the original Braun et al. paper."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "eca1723c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:33.488973Z",
     "iopub.status.busy": "2022-01-18T23:11:33.488377Z",
     "iopub.status.idle": "2022-01-18T23:11:33.495769Z",
     "shell.execute_reply": "2022-01-18T23:11:33.496290Z"
    }
   },
   "outputs": [],
   "source": [
    "energy_list, pdf_list, index_list = read_input_from_file(\"data/Braun2008Fig4b.h5\")\n",
    "energy_likelihood = MarginalisedEnergyLikelihoodBraun2008(\n",
    "    energy_list, pdf_list, index_list\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e83f2a1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:33.522911Z",
     "iopub.status.busy": "2022-01-18T23:11:33.522297Z",
     "iopub.status.idle": "2022-01-18T23:11:34.957406Z",
     "shell.execute_reply": "2022-01-18T23:11:34.956818Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f4ba31577c0>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "test_energies = np.geomspace(10, 1e7)  # GeV\n",
    "test_indices = [2, 2.5, 3, 4]\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "for index in test_indices:\n",
    "    ax.plot(\n",
    "        test_energies,\n",
    "        [energy_likelihood(e, index) for e in test_energies],\n",
    "        label=\"index=%i\" % index,\n",
    "    )\n",
    "ax.set_xscale(\"log\")\n",
    "ax.set_yscale(\"log\")\n",
    "ax.set_xlabel(\"E_reco [GeV]\")\n",
    "ax.set_ylabel(\"Energy likelihood\")\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d06dcb53",
   "metadata": {},
   "source": [
    "## Point source likelihood"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "804e6277",
   "metadata": {},
   "source": [
    "Now we can bring together the spatial and energy terms to build a full `PointSourceLikelihood`. First, let's load some data from the simulation notebook to allow us to demonstrate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ac147b5d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:34.964611Z",
     "iopub.status.busy": "2022-01-18T23:11:34.963966Z",
     "iopub.status.idle": "2022-01-18T23:11:34.969036Z",
     "shell.execute_reply": "2022-01-18T23:11:34.968472Z"
    }
   },
   "outputs": [],
   "source": [
    "data = {}\n",
    "with h5py.File(\"data/sim_output.h5\", \"r\") as f:\n",
    "    for key in f:\n",
    "        if \"source_0\" not in key and \"source_1\" not in key:\n",
    "            data[key] = f[key][()]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c18fc7ba",
   "metadata": {},
   "source": [
    "Now lets put our likelihood structure and data in together, along with a proposed source location:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3ee553c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:34.974441Z",
     "iopub.status.busy": "2022-01-18T23:11:34.973646Z",
     "iopub.status.idle": "2022-01-18T23:11:34.977894Z",
     "shell.execute_reply": "2022-01-18T23:11:34.977311Z"
    }
   },
   "outputs": [],
   "source": [
    "likelihood = PointSourceLikelihood(\n",
    "    spatial_likelihood,\n",
    "    energy_likelihood,\n",
    "    data[\"ra\"],\n",
    "    data[\"dec\"],\n",
    "    data[\"reco_energy\"],\n",
    "    source_coord,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d94e37b",
   "metadata": {},
   "source": [
    "The likelihood will automatically select a declination band around the proposed source location. Because of the Gaussian spatial likelihood, neutrinos far from the source will have negligible contribution. We can control the width of this band with the optional argument `band_width_factor`. Let's see how many events ended up in the band, compared to the total number:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "06f6f908",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:34.982918Z",
     "iopub.status.busy": "2022-01-18T23:11:34.982304Z",
     "iopub.status.idle": "2022-01-18T23:11:34.988565Z",
     "shell.execute_reply": "2022-01-18T23:11:34.987856Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "27"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "likelihood.N"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5d891334",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:34.993762Z",
     "iopub.status.busy": "2022-01-18T23:11:34.993149Z",
     "iopub.status.idle": "2022-01-18T23:11:34.999797Z",
     "shell.execute_reply": "2022-01-18T23:11:35.000336Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "243"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "likelihood.Ntot"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da14e5ae",
   "metadata": {},
   "source": [
    "We also note that the background likelihood is implemented automatically, for more information on the options here, check out the API docs. This is just a function of energy, with a constant factor to account for the isotropic directional likelihood."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e9b23526",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:35.018872Z",
     "iopub.status.busy": "2022-01-18T23:11:35.006022Z",
     "iopub.status.idle": "2022-01-18T23:11:36.181136Z",
     "shell.execute_reply": "2022-01-18T23:11:36.182162Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Background likelihood')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.plot(test_energies, [likelihood._background_likelihood(e) for e in test_energies])\n",
    "ax.set_xscale(\"log\")\n",
    "ax.set_yscale(\"log\")\n",
    "ax.set_xlabel(\"E_reco [GeV]\")\n",
    "ax.set_ylabel(\"Background likelihood\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd34fca4",
   "metadata": {},
   "source": [
    "## Point source search\n",
    "\n",
    "A point source search is usually carried out by defining the likelihood ratio of source and background hypotheses, then maximising this ratio as a function of $n_s$ and $\\gamma$. The log likelihood ratio evaluated at the maximum likelihood values is then reffered to as the *test statistic*.\n",
    "\n",
    "`icecube_tools` includes calculation of the test statistic, with optimisation performed by `iminuit`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "951e4466",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:36.188632Z",
     "iopub.status.busy": "2022-01-18T23:11:36.187455Z",
     "iopub.status.idle": "2022-01-18T23:11:36.239532Z",
     "shell.execute_reply": "2022-01-18T23:11:36.238319Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "97.41963927921903"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "likelihood.get_test_statistic()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2905ad70",
   "metadata": {},
   "source": [
    "To understand the significance of this results, we would have to calculate the test statistic for a large number of background-only simulations. These could then be used to calculate a p-value. Given there is a strong point source in the simulation we used, we can expect the test stastic to be lower if we remove the source events. Let's try this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7be9ffe8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:36.249580Z",
     "iopub.status.busy": "2022-01-18T23:11:36.248091Z",
     "iopub.status.idle": "2022-01-18T23:11:36.364329Z",
     "shell.execute_reply": "2022-01-18T23:11:36.363395Z"
    }
   },
   "outputs": [],
   "source": [
    "# Get all point source events\n",
    "ps_sel = data[\"source_label\"] == 1\n",
    "ntot_ps_events = len(np.where(ps_sel == True)[0])\n",
    "\n",
    "# Remove them one by one and find test statistic\n",
    "test_statistics = []\n",
    "for n_rm in range(ntot_ps_events):\n",
    "\n",
    "    i_keep = (ntot_ps_events - n_rm) - 1\n",
    "    ps_sel[np.where(ps_sel == True)[0][i_keep]] = False\n",
    "\n",
    "    new_data = {}\n",
    "    for key, value in data.items():\n",
    "        new_data[key] = data[key][~ps_sel]\n",
    "\n",
    "    new_likelihood = PointSourceLikelihood(\n",
    "        spatial_likelihood,\n",
    "        energy_likelihood,\n",
    "        new_data[\"ra\"],\n",
    "        new_data[\"dec\"],\n",
    "        new_data[\"reco_energy\"],\n",
    "        source_coord,\n",
    "    )\n",
    "    test_statistics.append(new_likelihood.get_test_statistic())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "19dfbde1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-18T23:11:36.391124Z",
     "iopub.status.busy": "2022-01-18T23:11:36.390217Z",
     "iopub.status.idle": "2022-01-18T23:11:36.595133Z",
     "shell.execute_reply": "2022-01-18T23:11:36.594079Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Test statistic value')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.plot([_ for _ in range(ntot_ps_events)], test_statistics)\n",
    "ax.set_xlabel(\"Number of point source events in dataset\")\n",
    "ax.set_ylabel(\"Test statistic value\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb30f3aa",
   "metadata": {},
   "source": [
    "So the more neutrinos are seen from a source, the easier that source is to detect."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc7a9266",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
